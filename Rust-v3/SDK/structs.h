#pragma once
// this needs to be here before il2cpp header
// since its using its types but doesnt include its header
// its the il2cppdumper issue
#include <cstdint>

#include "math.h"
#include "enums.h"

// il2cpp contains some keywords that are already used for macros

#ifdef stdin
    #undef stdin
#endif // stdin

#ifdef stdout
    #undef stdout
#endif // stdout

#ifdef stderr
    #undef stderr
#endif // stdout

// this is generated by il2cpp dumper
// it will not be included in repo since its 35MB
#include "il2cpp.h"

struct CTransform : UnityEngine_Transform_o
{
    static CTransform *GetTransform(void *addr);
    Vector3            GetPosition();
    void               SetPosition(Vector3 position);
    void               SetRotation(Vector4 rotation);
};

struct Bounds
{
    Vector3 center;  // 0x0
    Vector3 extents; // 0xC

    Vector3 GetMin()
    {
        return center - extents;
    }

    Vector3 GetMax()
    {
        return center + extents;
    }

    float SqrDistance(Vector3 point);
};

struct OBB
{
    Vector4 rotation; // 0x0 QUATERNION
    Vector3 position; // 0x10
    Vector3 extents;  // 0x1C
    Vector3 forward;  // 0x28
    Vector3 right;    // 0x34
    Vector3 up;       // 0x40
    float   reject;   // 0x4C

    Bounds  ToBounds();
    Vector3 ClosestPoint(Vector3 position);
};

struct CCamera : UnityEngine_Camera_o
{
    static CCamera *GetCurrentCamera();
    static CCamera *GetMainCamera();
    Vector3         GetPosition();
    Matrix4x4       GetViewMatrix();
    bool            WorldToScreenOld(const Vector3 &elementPosition, Vector2 &screenPosition);
    Vector3         WorldToScreen(Vector3 elementPosition);
};

struct CModel : Model_o
{
    Vector3     GetBonePosition(PlayerBones bone);
    CTransform *GetBoneTransform(PlayerBones bone);
};

struct CBaseNetworkable : Il2CppObject, BaseNetworkable_Fields
{ };

struct CBaseEntity : CBaseNetworkable, BaseEntity_Fields_s
{
    Vector3 GetOriginPosition();
    Vector3 GetLocalVelocity();
    Vector3 GetWorldVelocity();
    Vector3 GetParentVelocity();
};
